(()=>{"use strict";var n={28:(n,r,t)=>{t.d(r,{Z:()=>d});var e=t(537),o=t.n(e),a=t(645),i=t.n(a)()(o());i.push([n.id,"body, html{\r\n    padding: 0;\r\n    margin: 0;\r\n    font-family: 'Open Sans', sans-serif;\r\n}\r\n.header{\r\n    padding: 24px 0 24px 24px;\r\n    font-size: 48px;\r\n    color: white;\r\n    background-color: rgb(51, 51, 51);\r\n    font-weight: bold;\r\n}\r\n.container{\r\n    display: grid;\r\n    grid-template-columns: 1fr 4fr;\r\n    background-color: rgb(230, 230, 230);\r\n    min-height: calc(100vh - 114px);\r\n}\r\n.nav-bar{\r\n    background-color: rgb(168, 168, 168);\r\n    padding: 34px 34px 0 34px;\r\n    font-size: 20px;\r\n    min-width: 230px;\r\n}\r\n\r\n.home-image, .add-project-image{\r\n    margin: 4px 0 0 4px;\r\n    width: 20px;\r\n    float: left;\r\n    margin-right: 10px;\r\n}\r\n\r\n.nav-bar-home, .add-project-button{\r\n    margin-bottom: 20px;\r\n    cursor: pointer;\r\n    border-radius: 8px;\r\n    white-space: nowrap;\r\n    padding: 10px;\r\n}\r\n.nav-bar-home:hover, .add-project-button:hover{\r\n    background-color: rgb(204, 204, 204);\r\n\r\n}\r\n\r\n.project-header{\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.content{\r\n    padding: 10px 0 0 80px;\r\n}\r\n\r\n.add-task{\r\n    border: none;\r\n    background-color: transparent;\r\n    font-size: 20px;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    width: 80%;\r\n    text-align: left;\r\n    cursor: pointer;\r\n}\r\n\r\n.add-task:hover{\r\n    background-color: rgb(204, 204, 204);\r\n}\r\n\r\n.add-project-input, .add-task-input{\r\n    height: 20px;\r\n    padding: 10px;\r\n    border-radius: 8px;\r\n    width: 90%;\r\n    font-size: 16px;\r\n    border: 1px solid rgb(126, 126, 126);\r\n    margin-bottom: 20px;\r\n}\r\n\r\ntextarea:focus, input:focus{\r\n    outline: none;\r\n}\r\n\r\n.add-project-confirm-button, .add-task-confirm-button{\r\n    background-color: rgb(60, 255, 86);\r\n    border: 2px solid rgb(60, 167, 56);\r\n}\r\n.add-project-confirm-button:hover, .add-task-confirm-button:hover{\r\n    filter: brightness(0.9);\r\n}\r\n.add-project-cancel-button{\r\n    background-color: rgb(247, 73, 73);\r\n    border: 2px solid rgb(192, 35, 35);\r\n    margin-left: 6%;\r\n}\r\n.add-task-cancel-button{\r\n    background-color: rgb(247, 73, 73);\r\n    border: 2px solid rgb(192, 35, 35);\r\n    margin-left: 4.35%;\r\n}\r\n.add-project-cancel-button:hover, .add-task-cancel-button:hover{\r\n    filter: brightness(0.9);\r\n}\r\n.add-project-confirm-button, .add-project-cancel-button{\r\n    display: inline;\r\n    font-weight: bold;\r\n    border-radius: 8px;\r\n    padding: 6px 28px;\r\n    cursor: pointer;\r\n}\r\n.project{\r\n    display: flex;\r\n    border-radius: 8px;\r\n    padding: 10px;\r\n    cursor:pointer;\r\n    justify-content: space-between;\r\n}\r\n.project:hover{\r\n    background-color: rgb(204, 204, 204);\r\n}\r\n.remove-button, .project-remove-button{\r\n    font-weight: bold;\r\n    margin-left: auto;\r\n}\r\n\r\n.add-task-confirm-button, .add-task-cancel-button{\r\n    display: inline;\r\n    font-weight: bold;\r\n    border-radius: 8px;\r\n    padding: 10px 220px;\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n    width: 40%;\r\n}\r\n\r\n.add-task-input{\r\n    min-width: 1018px;\r\n}\r\n\r\n.task{\r\n    display: flex;\r\n    border-radius: 8px;\r\n    padding: 20px;\r\n    cursor:pointer;\r\n    width: 76.5%;\r\n    font-size: 20px;\r\n}\r\n\r\n.task:hover{\r\n    background-color: rgb(204, 204, 204);\r\n}\r\n\r\n.task-duedate{\r\n    margin-left: 80%;\r\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;IACT,oCAAoC;AACxC;AACA;IACI,yBAAyB;IACzB,eAAe;IACf,YAAY;IACZ,iCAAiC;IACjC,iBAAiB;AACrB;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,oCAAoC;IACpC,+BAA+B;AACnC;AACA;IACI,oCAAoC;IACpC,yBAAyB;IACzB,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;IACnB,WAAW;IACX,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;IACnB,eAAe;IACf,kBAAkB;IAClB,mBAAmB;IACnB,aAAa;AACjB;AACA;IACI,oCAAoC;;AAExC;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,6BAA6B;IAC7B,eAAe;IACf,aAAa;IACb,kBAAkB;IAClB,UAAU;IACV,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,UAAU;IACV,eAAe;IACf,oCAAoC;IACpC,mBAAmB;AACvB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,kCAAkC;IAClC,kCAAkC;AACtC;AACA;IACI,uBAAuB;AAC3B;AACA;IACI,kCAAkC;IAClC,kCAAkC;IAClC,eAAe;AACnB;AACA;IACI,kCAAkC;IAClC,kCAAkC;IAClC,kBAAkB;AACtB;AACA;IACI,uBAAuB;AAC3B;AACA;IACI,eAAe;IACf,iBAAiB;IACjB,kBAAkB;IAClB,iBAAiB;IACjB,eAAe;AACnB;AACA;IACI,aAAa;IACb,kBAAkB;IAClB,aAAa;IACb,cAAc;IACd,8BAA8B;AAClC;AACA;IACI,oCAAoC;AACxC;AACA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,kBAAkB;IAClB,mBAAmB;IACnB,eAAe;IACf,eAAe;IACf,UAAU;AACd;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,aAAa;IACb,cAAc;IACd,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:["body, html{\r\n    padding: 0;\r\n    margin: 0;\r\n    font-family: 'Open Sans', sans-serif;\r\n}\r\n.header{\r\n    padding: 24px 0 24px 24px;\r\n    font-size: 48px;\r\n    color: white;\r\n    background-color: rgb(51, 51, 51);\r\n    font-weight: bold;\r\n}\r\n.container{\r\n    display: grid;\r\n    grid-template-columns: 1fr 4fr;\r\n    background-color: rgb(230, 230, 230);\r\n    min-height: calc(100vh - 114px);\r\n}\r\n.nav-bar{\r\n    background-color: rgb(168, 168, 168);\r\n    padding: 34px 34px 0 34px;\r\n    font-size: 20px;\r\n    min-width: 230px;\r\n}\r\n\r\n.home-image, .add-project-image{\r\n    margin: 4px 0 0 4px;\r\n    width: 20px;\r\n    float: left;\r\n    margin-right: 10px;\r\n}\r\n\r\n.nav-bar-home, .add-project-button{\r\n    margin-bottom: 20px;\r\n    cursor: pointer;\r\n    border-radius: 8px;\r\n    white-space: nowrap;\r\n    padding: 10px;\r\n}\r\n.nav-bar-home:hover, .add-project-button:hover{\r\n    background-color: rgb(204, 204, 204);\r\n\r\n}\r\n\r\n.project-header{\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.content{\r\n    padding: 10px 0 0 80px;\r\n}\r\n\r\n.add-task{\r\n    border: none;\r\n    background-color: transparent;\r\n    font-size: 20px;\r\n    padding: 20px;\r\n    border-radius: 8px;\r\n    width: 80%;\r\n    text-align: left;\r\n    cursor: pointer;\r\n}\r\n\r\n.add-task:hover{\r\n    background-color: rgb(204, 204, 204);\r\n}\r\n\r\n.add-project-input, .add-task-input{\r\n    height: 20px;\r\n    padding: 10px;\r\n    border-radius: 8px;\r\n    width: 90%;\r\n    font-size: 16px;\r\n    border: 1px solid rgb(126, 126, 126);\r\n    margin-bottom: 20px;\r\n}\r\n\r\ntextarea:focus, input:focus{\r\n    outline: none;\r\n}\r\n\r\n.add-project-confirm-button, .add-task-confirm-button{\r\n    background-color: rgb(60, 255, 86);\r\n    border: 2px solid rgb(60, 167, 56);\r\n}\r\n.add-project-confirm-button:hover, .add-task-confirm-button:hover{\r\n    filter: brightness(0.9);\r\n}\r\n.add-project-cancel-button{\r\n    background-color: rgb(247, 73, 73);\r\n    border: 2px solid rgb(192, 35, 35);\r\n    margin-left: 6%;\r\n}\r\n.add-task-cancel-button{\r\n    background-color: rgb(247, 73, 73);\r\n    border: 2px solid rgb(192, 35, 35);\r\n    margin-left: 4.35%;\r\n}\r\n.add-project-cancel-button:hover, .add-task-cancel-button:hover{\r\n    filter: brightness(0.9);\r\n}\r\n.add-project-confirm-button, .add-project-cancel-button{\r\n    display: inline;\r\n    font-weight: bold;\r\n    border-radius: 8px;\r\n    padding: 6px 28px;\r\n    cursor: pointer;\r\n}\r\n.project{\r\n    display: flex;\r\n    border-radius: 8px;\r\n    padding: 10px;\r\n    cursor:pointer;\r\n    justify-content: space-between;\r\n}\r\n.project:hover{\r\n    background-color: rgb(204, 204, 204);\r\n}\r\n.remove-button, .project-remove-button{\r\n    font-weight: bold;\r\n    margin-left: auto;\r\n}\r\n\r\n.add-task-confirm-button, .add-task-cancel-button{\r\n    display: inline;\r\n    font-weight: bold;\r\n    border-radius: 8px;\r\n    padding: 10px 220px;\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n    width: 40%;\r\n}\r\n\r\n.add-task-input{\r\n    min-width: 1018px;\r\n}\r\n\r\n.task{\r\n    display: flex;\r\n    border-radius: 8px;\r\n    padding: 20px;\r\n    cursor:pointer;\r\n    width: 76.5%;\r\n    font-size: 20px;\r\n}\r\n\r\n.task:hover{\r\n    background-color: rgb(204, 204, 204);\r\n}\r\n\r\n.task-duedate{\r\n    margin-left: 80%;\r\n}"],sourceRoot:""}]);const d=i},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var t="",e=void 0!==r[5];return r[4]&&(t+="@supports (".concat(r[4],") {")),r[2]&&(t+="@media ".concat(r[2]," {")),e&&(t+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),t+=n(r),e&&(t+="}"),r[2]&&(t+="}"),r[4]&&(t+="}"),t})).join("")},r.i=function(n,t,e,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(e)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var A=0;A<n.length;A++){var s=[].concat(n[A]);e&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),r.push(s))}},r}},537:n=>{n.exports=function(n){var r=n[1],t=n[3];if(!t)return r;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),a="/*# ".concat(o," */");return[r].concat([a]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function t(n){for(var t=-1,e=0;e<r.length;e++)if(r[e].identifier===n){t=e;break}return t}function e(n,e){for(var a={},i=[],d=0;d<n.length;d++){var c=n[d],A=e.base?c[0]+e.base:c[0],s=a[A]||0,p="".concat(A," ").concat(s);a[A]=s+1;var l=t(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==l)r[l].references++,r[l].updater(u);else{var C=o(u,e);e.byIndex=d,r.splice(d,0,{identifier:p,updater:C,references:1})}i.push(p)}return i}function o(n,r){var t=r.domAPI(r);return t.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;t.update(n=r)}else t.remove()}}n.exports=function(n,o){var a=e(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var d=t(a[i]);r[d].references--}for(var c=e(n,o),A=0;A<a.length;A++){var s=t(a[A]);0===r[s].references&&(r[s].updater(),r.splice(s,1))}a=c}}},569:n=>{var r={};n.exports=function(n,t){var e=function(n){if(void 0===r[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}r[n]=t}return r[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(t)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,t)=>{n.exports=function(n){var r=t.nc;r&&n.setAttribute("nonce",r)}},380:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(t){!function(n,r,t){var e="";t.supports&&(e+="@supports (".concat(t.supports,") {")),t.media&&(e+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(e+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),e+=t.css,o&&(e+="}"),t.media&&(e+="}"),t.supports&&(e+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(e,n,r.options)}(r,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function t(e){var o=r[e];if(void 0!==o)return o.exports;var a=r[e]={id:e,exports:{}};return n[e](a,a.exports,t),a.exports}t.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return t.d(r,{a:r}),r},t.d=(n,r)=>{for(var e in r)t.o(r,e)&&!t.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:r[e]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var r=t.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var e=r.getElementsByTagName("script");e.length&&(n=e[e.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{var n=t(379),r=t.n(n),e=t(380),o=t.n(e),a=t(569),i=t.n(a),d=t(565),c=t.n(d),A=t(216),s=t.n(A),p=t(589),l=t.n(p),u=t(28),C={};C.styleTagTransform=l(),C.setAttributes=c(),C.insert=i().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=s(),r()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals,t.p,t.p,t.p;let f=[];const b=document.querySelector(".content"),m=localStorage.getItem("tasks");m?f=JSON.parse(m):(f=[],localStorage.setItem("tasks",JSON.stringify(f))),function(){const n=document.createElement("h1");n.classList.add("h1-title");const r=JSON.parse(localStorage.getItem("project"));"Default Project"==r[0]?n.textContent="Default Project":n.textContent=r[0],b.appendChild(n);const t=document.createElement("div");b.appendChild(t),t.classList.add("task-container");const e=document.createElement("button");e.textContent="+ Add Task",e.classList.add("add-task"),b.appendChild(e),""==n.textContent&&(e.style.display="none")}();const g=document.querySelector(".task-container"),h=document.querySelector(".add-task"),x=document.createElement("input"),v=document.createElement("div"),I=document.createElement("div"),B=document.querySelector(".h1-title");function k(){h.style.display="block",x.value="",x.remove(),v.remove(),I.remove()}function y(){f.forEach((n=>{Object.values(n)[2]===B.textContent&&function(n){let r=document.createElement("div");r.textContent=Object.values(n)[0],r.classList.add("task");let t=document.createElement("input");t.type="date",t.classList.add("task-duedate"),t.value=n.DueDate,t.addEventListener("change",(()=>{n.DueDate=t.value}));let e=document.createElement("div");e.textContent="x",e.classList.add("remove-button"),e.addEventListener("click",(()=>{g.removeChild(r),f.splice(f.indexOf(n),1),localStorage.setItem("tasks",JSON.stringify(f))})),console.log(f),r.appendChild(t),r.appendChild(e),g.appendChild(r)}(n)}))}function j(){for(;g.firstChild;)g.removeChild(g.firstChild)}let E;y(),h.addEventListener("click",(()=>{h.style.display="none",x.classList.add("add-task-input"),v.textContent="Add",v.classList.add("add-task-confirm-button"),I.textContent="Cancel",I.classList.add("add-task-cancel-button"),g.appendChild(x),g.appendChild(v),g.appendChild(I)})),v.addEventListener("click",(()=>{!function(n){if(!1===/^[A-Za-z0-9]*$/.test(n)||""===n)return void alert("You can only enter letters and numbers.");if(f.includes(n))return void alert("You can only enter an item once.");y(),x.value="";let r=("",{Title:n,DueDate:"",Project:B.textContent});f.push(r),localStorage.setItem("tasks",JSON.stringify(f))}(x.value),j(),y(),k()})),I.addEventListener("click",(()=>{k()}));const w=document.querySelector(".nav-bar-projects"),S=document.createElement("input"),L=document.createElement("div"),O=document.createElement("div"),z=document.querySelector(".project-container"),N=document.querySelector(".add-project-button"),T=localStorage.getItem("project");function U(){N.style.display="block",S.value="",S.remove(),L.remove(),O.remove()}function J(){E.forEach((n=>{!function(n){let r=document.createElement("div");r.textContent=n,r.classList.add("project"),r.addEventListener("click",(()=>{!function(n){B.style.display="block",g.style.display="block",h.style.display="block",B.textContent=n}(n),j(),y()}));let t=document.createElement("div");t.textContent="x",t.classList.add("project-remove-button"),t.addEventListener("click",(t=>{t.stopPropagation(),z.removeChild(r),E.splice(E.indexOf(n),1),function(n){B.textContent==n&&(B.style.display="none",g.style.display="none",h.style.display="none"),f=f.filter((function(r){return r.Project!==n}))}(n),localStorage.setItem("project",JSON.stringify(E))})),r.appendChild(t),z.appendChild(r)}(n)}))}T?E=JSON.parse(T):(E=["Default Project"],localStorage.setItem("project",JSON.stringify(E))),J(),N.addEventListener("click",(()=>{N.style.display="none",S.classList.add("add-project-input"),w.appendChild(S),L.textContent="Add",L.classList.add("add-project-confirm-button"),L.addEventListener("click",(()=>{var n;""===(n=S.value)||""===n.trim()||E.includes(n.trim())||(E.push(n),localStorage.setItem("project",JSON.stringify(E))),function(){for(;z.firstChild;)z.removeChild(z.firstChild)}(),J(),U()})),w.appendChild(L),O.textContent="Cancel",O.classList.add("add-project-cancel-button"),O.addEventListener("click",(()=>{U()})),w.appendChild(O)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,